name: ci-cd

on:
  push:
    branches:
      - main

jobs:
  ci:
    name: ci
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Cache node_modules 📦
        uses: actions/cache@v2.1.4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies 👨🏻‍💻
        run: npm ci --prefer-offline --no-audit

      - name: Run linter 👀
        run: npm run lint

      # - name: Run tests 🧪
      #   run: npm run test
  cd: 
    name: cd
    needs: ci
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v2.1.5

      - name: Install dependencies 👨🏻‍💻
        run: npm install

      - name: Generate Code 📦
        run: npm run generate
        env:
          NODE_ENV: production
          BASE_URL: https://${{secrets.MY_SITE_DOMAIN}}
          API_KEY: ${{secrets.API_KEY}}
          USER_POOL_ID: ${{secrets.USER_POOL_ID}}
          CLIENT_ID: ${{secrets.CLIENT_ID}}

      - name: Configure AWS Credentials 👀
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-region: ap-northeast-1
          role-to-assume: ${{secrets.AWS_IAM_TO_ASSUME}}
          role-session-name: my-site-front-github-actions-session
      
      - name: Deploy Site
        run: aws s3 cp dist s3://${{secrets.MY_SITE_DOMAIN}}/ --recursive

      - name: Delete cache  
        run: aws cloudfront create-invalidation --distribution-id $(aws cloudfront list-distributions --query "DistributionList.Items[?Aliases.Items[0]=='${{secrets.MY_SITE_DOMAIN}}'].Id" --output text) --paths "/*"
